# sym link this to /etc/nginx/sites-available/connect-nginx-config
# sudo ln -s /connect-killer/connect-nginx-config /etc/nginx/sites-available/connect-nginx-config
# 
# Then sym link to /sites-enabled:
# sudo ln -s /etc/nginx/sites-available/connect-nginx-config /etc/nginx/sites-enabled/
# 
# So that,
# /etc/nginx/sites-enabled/connect-nginx-config -> /etc/nginx/sites-available/connect-nginx-config -> this file
# 
# Test the Nginx configuration for syntax errors:
# sudo nginx -t
# 
# Apply the changes by reloading or restarting Nginx:
# sudo systemctl reload nginx
# 
# Check nginx log with:
# sudo tail -f /var/log/nginx/error.log /var/log/nginx/access.log

server {
    listen 80;
    server_name cloud.springerelecronics.com;

    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name cloud.springerelecronics.com;

    ssl_certificate /etc/letsencrypt/live/cloud.springerelectronics.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cloud.springerelectronics.com/privkey.pem;

    location / {
        proxy_pass https://127.0.0.1:3222;  # Forward HTTPS requests to the HTTPS port
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

server {
    listen 80;
    server_name portal.springerelecronics.com;

    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name portal.springerelecronics.com;

    ssl_certificate /etc/letsencrypt/live/cloud.springerelectronics.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cloud.springerelectronics.com/privkey.pem;

    location / {
        proxy_pass https://127.0.0.1:3222;  # Forward HTTPS requests to the HTTPS port
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

server {
    listen 80;
    server_name useradmin.springerelectronics.com;

    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name useradmin.springerelectronics.com;

    ssl_certificate /etc/letsencrypt/live/cloud.springerelectronics.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cloud.springerelectronics.com/privkey.pem;
   

    location / {
        proxy_pass https://127.0.0.1:3223;  # Forward HTTPS requests to the HTTPS port
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

server {
    listen 80;
    server_name api.springerelectronics.com;

    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name api.springerelectronics.com;

    ssl_certificate /etc/letsencrypt/live/cloud.springerelectronics.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cloud.springerelectronics.com/privkey.pem;

    client_max_body_size 100M;

    location / {
        proxy_pass https://127.0.0.1:3223;  # Forward HTTPS requests to the HTTPS port
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

server {
    listen 80;
    server_name athena.springerelectronics.com;

    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name athena.springerelectronics.com;

    ssl_certificate /etc/letsencrypt/live/cloud.springerelectronics.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cloud.springerelectronics.com/privkey.pem;
    
    client_max_body_size 100M;

    location /ws/ {
        proxy_pass https://127.0.0.1:3223;  # Forward HTTPS requests to the HTTPS port
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        send_timeout 60s;
    }
}


server {
    listen 80;
    server_name connect-portal.duckdns.org;

    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name connect-portal.duckdns.org;

    ssl_certificate /etc/letsencrypt/live/cloud.springerelectronics.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cloud.springerelectronics.com/privkey.pem;

    location / {
        proxy_pass https://127.0.0.1:3222;  # Forward HTTPS requests to the HTTPS port
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

server {
    listen 80;
    server_name connect-useradmin.duckdns.org;

    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name connect-useradmin.duckdns.org;

    ssl_certificate /etc/letsencrypt/live/cloud.springerelectronics.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cloud.springerelectronics.com/privkey.pem;
   

    location / {
        proxy_pass https://127.0.0.1:3223;  # Forward HTTPS requests to the HTTPS port
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

server {
    listen 80;
    server_name connect-api.duckdns.org;

    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name connect-api.duckdns.org;

    ssl_certificate /etc/letsencrypt/live/cloud.springerelectronics.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cloud.springerelectronics.com/privkey.pem;

    client_max_body_size 100M;

    location / {
        proxy_pass https://127.0.0.1:3223;  # Forward HTTPS requests to the HTTPS port
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

server {
    listen 80;
    server_name connect-ws.duckdns.org;

    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name connect-ws.duckdns.org;

    ssl_certificate /etc/letsencrypt/live/cloud.springerelectronics.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cloud.springerelectronics.com/privkey.pem;
    
    client_max_body_size 100M;

    location /ws/ {
        proxy_pass http://127.0.0.1:3112;  # Forward HTTPS requests to the HTTPS port
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        send_timeout 60s;
    }
}